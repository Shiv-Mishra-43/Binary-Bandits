import React from "react";
import Dashboard from "./components/Dashboard";
import "./App.css";

function App() {
  return (
    <div className="App">
      <header>
        <h1>COVID-19 Dashboard</h1>
      </header>
      <Dashboard />
    </div>
  );
}

export default App;
import React, { useEffect, useState } from "react";
import Chart from "./Chart";

const Dashboard = () => {
  const [data, setData] = useState([]);
  const [alertMessage, setAlertMessage] = useState(null);
  const [prediction, setPrediction] = useState(null);

  useEffect(() => {
    // Fetch COVID-19 data
    const fetchData = async () => {
      try {
        const response = await fetch("/data");
        const result = await response.json();
        setData(result);
      } catch (error) {
        console.error("Error fetching data:", error);
      }
    };

    // Fetch pandemic threshold status
    const fetchThreshold = async () => {
      try {
        const response = await fetch("/threshold");
        const result = await response.json();
        if (result.pandemic) {
          setAlertMessage(result.message);
        }
      } catch (error) {
        console.error("Error fetching threshold status:", error);
      }
    };

    // Fetch future prediction
    const fetchPrediction = async () => {
      try {
        const response = await fetch("/predict");
        const result = await response.json();
        setPrediction(result.predicted_cases);
      } catch (error) {
        console.error("Error fetching prediction:", error);
      }
    };

    fetchData();
    fetchThreshold();
    fetchPrediction();
  }, []);

  return (
    <div className="dashboard">
      {alertMessage && <div className="alert">{alertMessage}</div>}
      <Chart data={data} />
      <div className="prediction">
        <h3>
          Predicted Cases for Next Day:{" "}
          <span>{prediction !== null ? prediction : "Loading..."}</span>
        </h3>
      </div>
    </div>
  );
};

export default Dashboard;
import React from "react";
import { Line } from "react-chartjs-2";

const Chart = ({ data }) => {
  const chartData = {
    labels: data.map((entry) => entry.date),
    datasets: [
      {
        label: "Daily New Cases",
        data: data.map((entry) => entry.daily_new_cases),
        borderColor: "blue",
        fill: false,
      },
    ],
  };

  const options = {
    responsive: true,
    maintainAspectRatio: false,
    scales: {
      x: {
        title: {
          display: true,
          text: "Dates",
        },
      },
      y: {
        title: {
          display: true,
          text: "Number of Cases",
        },
      },
    },
  };

  return (
    <div className="chart-container">
      <Line data={chartData} options={options} />
    </div>
  );
};

export default Chart;
body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f4f4f9;
}

.App {
  text-align: center;
  padding: 20px;
}

header h1 {
  margin-bottom: 20px;
}

.dashboard {
  max-width: 800px;
  margin: auto;
}

.alert {
  background-color: red;
  color: white;
  padding: 10px;
  margin-bottom: 20px;
  font-weight: bold;
  border-radius: 5px;
}

.chart-container {
  height: 400px;
  width: 100%;
}

.prediction {
  margin-top: 20px;
}
